<div class="row mb-3">
    <!-- Filters Section -->
    <div class="col-md-8">
        <div class="row">
            <div class="col-md-4 mb-3">
                <select id="categoryFilter" class="form-select">
                    <option value="">All Categories</option>
                    @foreach (var category in ViewData["Categories"] as List<Restaurant_POS_System.Models.Category>)
                    {
                        <option value="@category.CategoryId">@category.CategoryName</option>
                    }
                </select>
            </div>
            <div class="col-md-4 mb-3">
                <input type="text" id="searchFilter" class="form-control" placeholder="Search by name">
            </div>
            <div class="col-md-2 mb-3">
                <button id="filterButton" class="btn btn-danger">Filter</button>
            </div>
        </div>

        <!-- Categories Section -->
        <div class="categories mb-3 mt-3">
            @foreach (var category in ViewData["Categories"] as List<Restaurant_POS_System.Models.Category>)
            {
                <button class="btn btn-outline-danger category-btn" data-category-id="@category.CategoryId">
                    @category.CategoryName
                </button>
            }
        </div>

        <!-- Menu Items Section -->
        <div id="menuItemsContainer" class="row">
            @foreach (var item in Model)
            {
                <div class="col-md-3 mb-4">
                    <div class="card">
                        <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" style="height: 100px; object-fit: cover;">
                        <div class="card-body" style="height:100px">
                            <h5 class="card-title" style="font-size:14px">@item.Name</h5>
                            <p>Price: $@item.Price</p>
                        </div>
                        <div class="card-footer">
                            <button class="btn btn-sm btn-danger add-to-cart-btn" style="margin-left:15px" data-item-id="@item.Id">Add to Cart</button>
                        </div>
                    </div>
                </div>
            }
            
        </div>
    </div>

    <!-- Cart Section -->
    <div class="col-md-4">
        <div class="card shadow-sm" style="height: calc(80vh - 30px); margin: 15px; border: 1px solid #ddd;">
            <h5 class="card-header bg-danger text-white text-center">Cart Items</h5>
            <div id="cartContainer" class="overflow-auto p-3" style="height: calc(100% - 130px); border-bottom: 1px solid #ddd;">
                <!-- Cart items will be dynamically added here -->
            </div>
            <div class="card-footer text-center">
                <div id="cartSummary" class="mb-3">
                    <h6>Sales Summary</h6>
                    <h6>Total: <span id="cartTotal">0</span></h6>
                </div>
                <button class="btn btn-warning w-100">Order Now</button>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {

        fetch(`/Admin/Products/GetCartItems`)
            .then(response => response.json())
            .then(cart => updateCart(cart));

        // Category Filter
        document.querySelectorAll(".category-btn").forEach(btn => {
            btn.addEventListener("click", function () {
                const categoryId = this.getAttribute("data-category-id");
                fetch(`/Admin/Products/Index?categoryId=${categoryId}`)
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById("menuItemsContainer").innerHTML =
                            new DOMParser().parseFromString(html, "text/html").getElementById("menuItemsContainer").innerHTML;
                    });
            });
        });


        document.getElementById("filterButton").addEventListener("click", function () {
            const categoryId = document.getElementById("categoryFilter").value;
            const search = document.getElementById("searchFilter").value;

           
            // Perform AJAX request to fetch filtered data
            fetch(`/Admin/Products/Index?categoryId=${categoryId}&search=${search}`)
                .then(response => response.text())
                .then(html => {
                    
                    document.getElementById("menuItemsContainer").innerHTML =
                        new DOMParser().parseFromString(html, "text/html").getElementById("menuItemsContainer").innerHTML;
                });
        });

        // Add to Cart
        document.addEventListener("click", function (e) {
            if (e.target.classList.contains("add-to-cart-btn")) {
                const itemId = e.target.getAttribute("data-item-id");
                fetch(`/Admin/Products/AddToCart?itemId=${itemId}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" }
                })
                    .then(response => response.json())
                    .then(cart => updateCart(cart));
            }
        });



     
        document.addEventListener("click", function (e) {
            // Remove item from cart
            if (e.target.classList.contains("cart-delete-btn")) {
                const itemId = e.target.getAttribute("data-item-id");
                fetch(`/Admin/Products/UpdateCart`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ itemId, quantity: 0 }) 
                })
                    .then(response => response.json())
                    .then(cart => updateCart(cart));
            }

            // Reduce quantity
            if (e.target.classList.contains("cart-reduce-btn")) {
                const itemId = e.target.getAttribute("data-item-id");
                const currentQuantity = parseInt(e.target.getAttribute("data-current-quantity"));

                if (currentQuantity > 1) {
                    fetch(`/Admin/Products/UpdateCart`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ itemId, quantity: currentQuantity - 1 })
                    })
                        .then(response => response.json())
                        .then(cart => updateCart(cart));
                }
            }
        });

        function updateCart(cart) {
            const cartContainer = document.getElementById("cartContainer");
            cartContainer.innerHTML = "";
            let total = 0;

            cart.forEach((item, index) => {
                total += item.price * item.quantity;
                cartContainer.innerHTML += `
                <div class="cart-item d-flex flex-column align-items-start border-bottom pb-2 mb-2">
                    <p class="mb-1">${index + 1}. ${item.name} x ${item.quantity}</p>
                    <div class="cart-actions d-flex justify-content-end w-100">
                        <button class="btn btn-sm btn-warning me-2 cart-reduce-btn" data-item-id="${item.itemId}" data-current-quantity="${item.quantity}">-</button>
                            <button class="btn btn-sm btn-danger cart-delete-btn" data-item-id="${item.itemId}">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>
            `;
            });

            document.getElementById("cartTotal").textContent = `$${total.toFixed(2)}`;
        }

    });
</script>




<style>
    .cart-item {
        border-bottom: 1px solid #ddd;
        padding: 10px 0;
        font-size: 14px;
    }

        .cart-item:last-child {
            border-bottom: none;
        }

    .overflow-auto {
        overflow-y: auto;
    }
</style>